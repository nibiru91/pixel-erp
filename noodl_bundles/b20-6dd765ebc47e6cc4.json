[{"name":"/Scadenze","nodes":[{"id":"751cb5ab-ff00-6154-bd2a-7e6719aef7c0","type":"Page","parameters":{},"ports":[],"children":[{"id":"0c94890d-ea23-5991-1a5e-063f9274cf68","type":"Group","parameters":{"scrollEnabled":false,"clip":false,"sizeMode":"explicit"},"ports":[],"children":[{"id":"58763433-a933-ce78-be83-64b9c83babb5","type":"/Dashboards/DashMain_noPayment","parameters":{},"ports":[],"children":[]}]}]},{"id":"7ecadc0e-d2cc-4896-d0e3-37be4c6e7e4a","type":"PageInputs","parameters":{},"ports":[],"children":[]},{"id":"37e7a43f-1d8c-dd48-cea1-e288e6060580","type":"JavaScriptFunction","parameters":{"functionScript":"if (!Inputs.Profile) {\n    Outputs.LogOut()\n} else {\n    const isAdmin = Inputs.Profile.is_admin;\n    if (isAdmin) {\n        Outputs.Admin();\n    } else { Outputs.Venditore(); }\n}"},"ports":[{"name":"in-Profile","displayName":"Profile","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-LogOut","displayName":"LogOut","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Admin","displayName":"Admin","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Venditore","displayName":"Venditore","plug":"output","type":"signal","group":"Outputs","index":7}],"children":[]},{"id":"0df10b2b-3992-e888-6bed-f6465f26d76b","type":"RouterNavigate","parameters":{"router":"Supabase Logged In Router","target":"/Venditore"},"ports":[],"children":[]},{"id":"df480388-95f8-aa9c-c1e8-dcb41a3a8e95","type":"Model2","parameters":{"modelId":"currentUser","properties":"profile"},"ports":[],"children":[]},{"id":"5e809bda-5964-47de-36ed-b90513388ba4","type":"RouterNavigate","parameters":{"router":"Supabase Not Logged In Router","target":"/#Supabase Prefab/Supabase Prefab/Pages/Log in"},"ports":[],"children":[]}],"connections":[{"sourceId":"751cb5ab-ff00-6154-bd2a-7e6719aef7c0","sourcePort":"didMount","targetId":"58763433-a933-ce78-be83-64b9c83babb5","targetPort":"Run"},{"sourceId":"df480388-95f8-aa9c-c1e8-dcb41a3a8e95","sourcePort":"prop-profile","targetId":"37e7a43f-1d8c-dd48-cea1-e288e6060580","targetPort":"in-Profile"},{"sourceId":"37e7a43f-1d8c-dd48-cea1-e288e6060580","sourcePort":"out-Venditore","targetId":"0df10b2b-3992-e888-6bed-f6465f26d76b","targetPort":"navigate"},{"sourceId":"37e7a43f-1d8c-dd48-cea1-e288e6060580","sourcePort":"out-LogOut","targetId":"5e809bda-5964-47de-36ed-b90513388ba4","targetPort":"navigate"},{"sourceId":"751cb5ab-ff00-6154-bd2a-7e6719aef7c0","sourcePort":"didMount","targetId":"37e7a43f-1d8c-dd48-cea1-e288e6060580","targetPort":"run"}],"ports":[],"roots":["751cb5ab-ff00-6154-bd2a-7e6719aef7c0"]},{"name":"/Dashboards/DashMain_noPayment","nodes":[{"id":"75dacb9e-0d8d-bde3-a2cf-84aed17c55cf","type":"Group","parameters":{"sizeMode":"explicit","width":{"value":100,"unit":"%"},"height":{"value":100,"unit":"%"}},"ports":[],"children":[{"id":"5ebaff18-9e6c-4ed8-2b68-8d482710dee6","type":"Group","parameters":{},"ports":[],"children":[{"id":"9a633614-6582-b46a-9f29-128f929d217e","type":"Group","parameters":{"marginLeft":{"value":16,"unit":"px"},"marginTop":{"value":16,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"sizeMode":"contentHeight"},"ports":[],"children":[{"id":"7b169208-20a7-653f-a90e-a3af2192edaf","type":"Group","parameters":{},"ports":[],"children":[{"id":"dff10e01-5f74-ad4e-a683-459eea953249","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight"},"ports":[],"children":[{"id":"166dc674-98ff-7289-f16d-2f157d75d642","type":"net.noodl.controls.options","parameters":{"items":"[\n    {\"Label\":\"nessun filtro\", \"Value\":\"\"},\n    {\"Label\":\"high-ticket\", \"Value\":\"1\"},\n    {\"Label\":\"mid-ticket\", \"Value\":\"2\"},\n    {\"Label\":\"low-ticket\", \"Value\":\"3\"}\n]","label":"Ramo B.U.","marginBottom":{"value":16,"unit":"px"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"children":[]},{"id":"155a0b1a-118c-fc19-6156-6a2106a5811f","type":"net.noodl.controls.options","parameters":{"items":"[\n    {\"Label\":\"nessun filtro\", \"Value\":\"\"},\n    {\"Label\":\"online\", \"Value\":\"1\"},\n    {\"Label\":\"diretta\", \"Value\":\"2\"}\n]","label":"Business Unit","marginBottom":{"value":16,"unit":"px"}},"ports":[],"children":[]}]},{"id":"cb0a6dad-c896-2579-8642-ec97f5286184","type":"net.noodl.controls.options","parameters":{"label":"Soggetto","marginBottom":{"value":16,"unit":"px"},"items":"[]"},"ports":[],"children":[]},{"id":"edd613a4-4726-a431-f139-be388bd14d6c","type":"net.noodl.controls.options","parameters":{"label":"Gestore / Fornitore","marginBottom":{"value":16,"unit":"px"},"items":"[]"},"ports":[],"children":[]},{"id":"e7fd5181-1619-303b-2213-05b8d7c6ef2b","type":"Group","parameters":{"flexDirection":"row","marginRight":{"value":16,"unit":"px"},"sizeMode":"contentHeight"},"ports":[],"children":[{"id":"82d02be9-aa24-541d-ffa0-fe4d4d822891","type":"/Components/Date Picker","parameters":{"Show Label":true,"Label":"Data DAL","Margin Bottom":{"value":16,"unit":"px"},"Margin Right":{"value":16,"unit":"px"}},"ports":[],"children":[]},{"id":"5ad5ce2e-e1a0-a65c-9188-e7da8a742553","type":"/Components/Date Picker","parameters":{"Show Label":true,"Label":"Data AL","Margin Bottom":{"value":16,"unit":"px"}},"ports":[],"children":[]}]}]},{"id":"9f733621-7503-0c5f-3177-ff0678811d9e","type":"Group","parameters":{"sizeMode":"explicit","height":{"value":500,"unit":"px"},"alignItems":"center"},"ports":[],"children":[{"id":"8240ac05-5073-a21e-b858-8f3692be602d","type":"net.noodl.controls.checkbox","parameters":{"label":"Grafici Giornalieri"},"ports":[],"children":[]},{"id":"64546baa-ed48-89c5-358c-f5d5661f423b","type":"Line Chart","parameters":{},"ports":[],"children":[]},{"id":"e2f36b8c-e8b2-d247-f745-e34fc5a8ea65","type":"Bar Chart","parameters":{},"ports":[],"children":[]}]},{"id":"dadbb08d-bb1a-89ab-e8ec-65cf3d8a0ab9","type":"net.noodl.visual.columns","parameters":{"layoutString":"1 1"},"ports":[],"children":[{"id":"f00f8664-0332-1697-8ec9-22d6a12a029d","type":"Group","parameters":{},"ports":[],"children":[{"id":"1e38cf6f-c3ee-5985-20db-3dd4eb36b526","type":"Text","parameters":{"text":"","textStyle":"Title Large","color":"blue","marginLeft":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"marginTop":{"value":16,"unit":"px"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"children":[]},{"id":"16e7c0fe-1b8c-ef1c-a8d7-cb9f600f33eb","type":"For Each","parameters":{"template":"/Cards/Card_daIncassare","inputMappingScript":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n\t'supid':'supid',\n\t'date': 'date',\n\t'importo': 'importo',\n\t'soggetto': 'soggetto_ragsoc',\n\t'area': 'an_area_nome',\n\t'ticket': 'an_tecnologia_nome',\n\t'gestore': 'an_gestore_ragsoc',\n\t'prodotto': 'prodotto_nome',\n})"},"ports":[],"children":[]}]},{"id":"5799e928-a97d-45c5-121a-970b21dfd4c7","type":"Group","parameters":{"sizeMode":"explicit","width":{"value":100,"unit":"%"},"height":{"value":100,"unit":"%"}},"ports":[],"children":[{"id":"41c53da8-3890-ea34-ba5b-546d6c3e0498","type":"Text","parameters":{"text":"","textStyle":"Title Large","color":"red","marginLeft":{"value":16,"unit":"px"},"marginBottom":{"value":16,"unit":"px"},"marginTop":{"value":16,"unit":"px"},"marginRight":{"value":16,"unit":"px"}},"ports":[],"children":[]},{"id":"a22cc744-503d-dacc-9e24-3fa985545b60","type":"For Each","parameters":{"templateType":"explicit","template":"/Cards/Card_daPagare","items":"[]","inputMappingScript":"// Here you add mappings between the properties of the item objects and the inputs of the components.\n// 'myComponentInput': 'myObjectProperty',\n// 'anotherComponentInput': function () { return object.get('someProperty') + ' ' + object.get('otherProp') }\n// These are the default mappings based on the selected template component.\nmap({\n\t'supid':'supid',\n\t'date': 'date',\n\t'importo': 'importo',\n\t'soggetto_ragsoc': 'soggetto_ragsoc',\n\t'an_area_nome': 'an_area_nome',\n\t'an_tecnologia_nome': 'an_tecnologia_nome',\n})\n"},"ports":[],"children":[]}]}]}]}]}]},{"id":"3ead75bb-84a2-f7ed-13c5-287313bdc0a8","type":"Expression","parameters":{"expression":"\"Totale da Incassare Euro \" + importo.toFixed(2)"},"ports":[],"children":[]},{"id":"5618c32f-a3e5-db87-cd86-79f9660bf1b5","type":"Expression","parameters":{"expression":"\"Totale da Pagare Euro \" + importo.toFixed(2)"},"ports":[],"children":[]},{"id":"b72aa755-40ea-f3d7-2644-6e5659c01931","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\n\n\ntry {\n  \n  const { data, error } = await supabase\n        .from('soggetti')\n        .select('id, ragione_sociale')\n        .eq('tipo', 1);\n\n    if (error) {\n    console.error(error)\n    Outputs.Failure();\n    }\n    \n    else {\n    // Trasforma i risultati in un formato { Label, Value }\n    const transformedData = data.map(soggetto => ({\n        Value: soggetto.id.toString(),\n        Label: soggetto.ragione_sociale\n    }));\n\n    //return transformedData;\n\n    Outputs.Data = data;\n    Outputs.TransformedData = transformedData;\n    Outputs.Success();\n\n  }\n} \n  catch (error) {\n    console.error(error)\n    Outputs.Failure();\n  }"},"ports":[{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Data","displayName":"Data","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-TransformedData","displayName":"TransformedData","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"53b8dd34-0264-d48e-a7c5-eafd22ae162e","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\n\n\ntry {\n  \n  const { data, error } = await supabase\n        .from('soggetti')\n        .select('id, ragione_sociale')\n        .eq('tipo', 2)\n        .eq('is_venditore', true);\n\n    if (error) {\n    console.error(error)\n    Outputs.Failure();\n    }\n    \n    else {\n    // Trasforma i risultati in un formato { Label, Value }\n    const transformedData = data.map(soggetto => ({\n        Value: soggetto.id.toString(),\n        Label: soggetto.ragione_sociale\n    }));\n\n    //return transformedData;\n\n    Outputs.Data = data;\n    Outputs.TransformedData = transformedData;\n    Outputs.Success();\n\n  }\n} \n  catch (error) {\n    console.error(error)\n    Outputs.Failure();\n  }"},"ports":[{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Data","displayName":"Data","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-TransformedData","displayName":"TransformedData","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"9098a211-d12f-88d5-bf0e-cc7fad8a524d","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\n\n\ntry {\n  \n  const { data, error } = await supabase\n        .from('def_an_tecnologia')\n        .select('id, nome');\n\n    if (error) {\n    console.error(error)\n    Outputs.Failure();\n    }\n    \n    else {\n    // Trasforma i risultati in un formato { Label, Value }\n    const transformedData = data.map(tecnologia => ({\n        Value: tecnologia.id.toString(),\n        Label: tecnologia.nome\n    }));\n\n    //return transformedData;\n\n    Outputs.Data = data;\n    Outputs.TransformedData = transformedData;\n    Outputs.Success();\n\n  }\n} \n  catch (error) {\n    console.error(error)\n    Outputs.Failure();\n  }"},"ports":[{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Data","displayName":"Data","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-TransformedData","displayName":"TransformedData","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"2a5b8306-2313-6a39-20fd-75da09e604bc","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\n\n\ntry {\n  \n  const { data, error } = await supabase\n        .from('def_an_area')\n        .select('id, nome');\n\n    if (error) {\n    console.error(error)\n    Outputs.Failure();\n    }\n    \n    else {\n    // Trasforma i risultati in un formato { Label, Value }\n    const transformedData = data.map(area => ({\n        Value: area.id.toString(),\n        Label: area.nome\n    }));\n\n    //return transformedData;\n\n    Outputs.Data = data;\n    Outputs.TransformedData = transformedData;\n    Outputs.Success();\n\n  }\n} \n  catch (error) {\n    console.error(error)\n    Outputs.Failure();\n  }"},"ports":[{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":4},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Data","displayName":"Data","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-TransformedData","displayName":"TransformedData","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"7507c0bd-348f-f631-e383-5f46fb85096f","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"1c1a077f-f48f-2955-f49f-18b61c36164c","type":"JavaScriptFunction","parameters":{"functionScript":"ricavi = Inputs.ricavi;\n  // Inserisci qui l'array completo \"ricavi\" come nel tuo esempio\n\ncosti = Inputs.costi;\n\n// Mappiamo i costi convertendo gli importi in negativo\nlet costiModificati = costi.map(item => {\n    return {\n        data: item.date,\n        importo: item.importo * -1,  // Moltiplica l'importo per -1\n    };\n});\n\n// Mappiamo i ricavi per diminuire le dimensioni del dataset ai soli dati utili, che sono già filtrati\nlet ricaviModificati = ricavi.map(item => {\n    return {\n        data: item.date,\n        importo: item.importo,  // Moltiplica l'importo per -1\n    };\n});\n\n// Uniamo gli array ricavi e costi modificati\nlet risultatoFinale = ricaviModificati.concat(costiModificati);\n\nOutputs.costi = costi;\nOutputs.ricavi = ricavi;\nOutputs.costiRicavi = risultatoFinale;\nOutputs.Success();\n\n"},"ports":[{"name":"in-ricavi","displayName":"ricavi","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-costi","displayName":"costi","plug":"input","type":"*","group":"Inputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-costi","displayName":"costi","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-ricavi","displayName":"ricavi","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-costiRicavi","displayName":"costiRicavi","plug":"output","type":"*","group":"Outputs","index":9}],"children":[]},{"id":"89adf665-5543-5951-8e3f-d00b7262d6ae","type":"JavaScriptFunction","parameters":{"functionScript":"// Recupera i dati dagli input\nconst costiRicavi = Inputs.CostiRicavi;\nconst isGiornaliero = Inputs.IsGiornaliero;\n\n// Funzione per estrarre il mese e l'anno dalla data\nconst getMonthYear = date => {\n    const d = new Date(date);\n    return `${d.getMonth() + 1}-${d.getFullYear()}`;\n};\n\n// Funzione per estrarre il giorno, mese e l'anno dalla data\nconst getDayMonthYear = date => {\n    const d = new Date(date);\n    return `${d.getDate()}-${d.getMonth() + 1}-${d.getFullYear()}`;\n};\n\n// Seleziona la funzione corretta in base al tipo di raggruppamento\nconst getKey = isGiornaliero ? getDayMonthYear : getMonthYear;\n\n// Raggruppa e somma gli importi per tipo e calcola la somma totale per periodo\nconst groupedData = costiRicavi.reduce((acc, item) => {\n    const period = getKey(item.data);\n    const tipo = item.importo > 0 ? 1 : 2;\n    const keyTipo = `${period}-${tipo}`;\n    const keyTotal = `${period}-total`;\n\n    // Crea un oggetto per tipo se non esiste\n    if (!acc[keyTipo]) {\n        acc[keyTipo] = {\n            tipo,\n            periodo: period,\n            importo: 0\n        };\n    }\n    // Crea un oggetto per il totale se non esiste\n    if (!acc[keyTotal]) {\n        acc[keyTotal] = {\n            tipo: 'total',\n            periodo: period,\n            importo: 0\n        };\n    }\n    // Aggiorna gli importi\n    acc[keyTipo].importo += item.importo;\n    acc[keyTotal].importo += item.importo;\n\n    return acc;\n}, {});\n\n// Trasforma l'oggetto in array\nconst dataArray = Object.values(groupedData);\n\n// Ottieni un array di periodi unici e ordina cronologicamente\nconst parseDate = period => {\n    const parts = period.split('-').map(Number);\n    const [dayOrMonth, month, year] = isGiornaliero ? parts : [1, ...parts];  // Usa `1` per il giorno se si raggruppa per mese\n    return new Date(year, month - 1, dayOrMonth);\n};\n\nconst periods = [...new Set(dataArray.map(data => data.periodo))]\n    .sort((a, b) => parseDate(a) - parseDate(b));\n\nconst finalData = periods.reduce((acc, period) => {\n    const tipo1 = dataArray.find(d => d.periodo === period && d.tipo === 1) || { importo: 0, tipo: 1, periodo: period };\n    const tipo2 = dataArray.find(d => d.periodo === period && d.tipo === 2) || { importo: 0, tipo: 2, periodo: period };\n    const total = dataArray.find(d => d.periodo === period && d.tipo === 'total') || { importo: 0, tipo: 'total', periodo: period };\n\n    acc.push(tipo1, tipo2, total);\n    return acc;\n}, []);\n\n// Prepara l'oggetto per Chart.js\nconst labels = periods; // Usa solo il valore del periodo senza suffissi\nconst dataTipo1 = [];\nconst dataTipo2 = [];\nconst dataTotal = [];\n\nfinalData.forEach(item => {\n    if (item.tipo === 1) {\n        dataTipo1.push(item.importo);\n    } else if (item.tipo === 2) {\n        dataTipo2.push(item.importo * -1);  // Moltiplica per -1 per mostrare i costi\n    } else if (item.tipo === 'total') {\n        dataTotal.push(item.importo);  // Totale combinato di ricavi e costi\n    }\n});\n\nconst chartData = {\n    labels,\n    datasets: [\n        {\n            label: 'Incassare',\n            data: dataTipo1,\n            borderColor: 'blue',\n            backgroundColor: 'blue',\n        },\n        {\n            label: 'Pagare',\n            data: dataTipo2,\n            borderColor: 'red',\n            backgroundColor: 'red',\n        },\n        {\n            label: 'Flow previsionale',\n            data: dataTotal,\n            borderColor: 'green',\n            backgroundColor: 'green',\n        }\n    ]\n};\n\nOutputs.Data = chartData;\n\n// Funzione per sommare i valori dataTotal per ottenere un ROL totale\nconst rolTotale = parseFloat((dataTotal.reduce((acc, numero) => acc + numero, 0))).toFixed(2);\n\nOutputs.ROLMensile = dataTotal;\nOutputs.ROLTotale = rolTotale;\n\nconst fatturatoTotale = parseFloat((dataTipo1.reduce((acc, numero) => acc + numero, 0))).toFixed(2);\n\nOutputs.FatturatoTotale = fatturatoTotale;\n\nconst config = {\n    y: {\n        grid: {\n            zeroLineWidth: 3,\n            zeroLineColor: 'rgba(0, 0, 0, 1)',\n            drawBorder: true,\n            color: function (context) {\n                if (context.tick.value === 0) {\n                    return 'rgba(0, 0, 0, 1)';  // Colore per la linea dello zero\n                }\n                return 'rgba(0, 0, 0, 0.1)';  // Colore per le altre linee della griglia\n            }\n        }\n    }\n};\n\nOutputs.YAxis = config;\n"},"ports":[{"name":"in-CostiRicavi","displayName":"CostiRicavi","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-IsGiornaliero","displayName":"IsGiornaliero","plug":"input","type":"*","group":"Inputs","index":5},{"name":"out-Data","displayName":"Data","plug":"output","type":"*","group":"Outputs","index":6},{"name":"out-ROLMensile","displayName":"ROLMensile","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-ROLTotale","displayName":"ROLTotale","plug":"output","type":"*","group":"Outputs","index":8},{"name":"out-FatturatoTotale","displayName":"FatturatoTotale","plug":"output","type":"*","group":"Outputs","index":9},{"name":"out-YAxis","displayName":"YAxis","plug":"output","type":"*","group":"Outputs","index":10}],"children":[]},{"id":"41a5d4a9-22d9-14b4-c017-1d168e6c6112","type":"Collection2","parameters":{"collectionId":"ArrayRicavi"},"ports":[],"children":[]},{"id":"2208a276-0342-0830-4767-276d7d624175","type":"Collection2","parameters":{"collectionId":"ArrayCosti"},"ports":[],"children":[]},{"id":"5ca16e98-8433-7214-a592-165a023e7e5a","type":"/Query/Select/Select_ricavi_noPayment","parameters":{},"ports":[],"children":[]},{"id":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","type":"/Query/Select/Select_costi_noPayment","parameters":{},"ports":[],"children":[]},{"id":"47ea4b0f-4a48-a0a4-96cb-4884378cbdc5","type":"Event Receiver","parameters":{"consume":"always","channelName":"FetchPayment"},"ports":[],"children":[]}],"connections":[{"sourceId":"3ead75bb-84a2-f7ed-13c5-287313bdc0a8","sourcePort":"result","targetId":"1e38cf6f-c3ee-5985-20db-3dd4eb36b526","targetPort":"text"},{"sourceId":"5618c32f-a3e5-db87-cd86-79f9660bf1b5","sourcePort":"result","targetId":"41c53da8-3890-ea34-ba5b-546d6c3e0498","targetPort":"text"},{"sourceId":"b72aa755-40ea-f3d7-2644-6e5659c01931","sourcePort":"out-TransformedData","targetId":"cb0a6dad-c896-2579-8642-ec97f5286184","targetPort":"items"},{"sourceId":"9a633614-6582-b46a-9f29-128f929d217e","sourcePort":"didMount","targetId":"b72aa755-40ea-f3d7-2644-6e5659c01931","targetPort":"run"},{"sourceId":"53b8dd34-0264-d48e-a7c5-eafd22ae162e","sourcePort":"out-TransformedData","targetId":"edd613a4-4726-a431-f139-be388bd14d6c","targetPort":"items"},{"sourceId":"9a633614-6582-b46a-9f29-128f929d217e","sourcePort":"didMount","targetId":"53b8dd34-0264-d48e-a7c5-eafd22ae162e","targetPort":"run"},{"sourceId":"9a633614-6582-b46a-9f29-128f929d217e","sourcePort":"didMount","targetId":"9098a211-d12f-88d5-bf0e-cc7fad8a524d","targetPort":"run"},{"sourceId":"9098a211-d12f-88d5-bf0e-cc7fad8a524d","sourcePort":"out-TransformedData","targetId":"166dc674-98ff-7289-f16d-2f157d75d642","targetPort":"items"},{"sourceId":"2a5b8306-2313-6a39-20fd-75da09e604bc","sourcePort":"out-TransformedData","targetId":"155a0b1a-118c-fc19-6156-6a2106a5811f","targetPort":"items"},{"sourceId":"9a633614-6582-b46a-9f29-128f929d217e","sourcePort":"didMount","targetId":"2a5b8306-2313-6a39-20fd-75da09e604bc","targetPort":"run"},{"sourceId":"1c1a077f-f48f-2955-f49f-18b61c36164c","sourcePort":"out-Success","targetId":"89adf665-5543-5951-8e3f-d00b7262d6ae","targetPort":"run"},{"sourceId":"1c1a077f-f48f-2955-f49f-18b61c36164c","sourcePort":"out-costiRicavi","targetId":"89adf665-5543-5951-8e3f-d00b7262d6ae","targetPort":"in-CostiRicavi"},{"sourceId":"89adf665-5543-5951-8e3f-d00b7262d6ae","sourcePort":"out-Data","targetId":"64546baa-ed48-89c5-358c-f5d5661f423b","targetPort":"data"},{"sourceId":"41a5d4a9-22d9-14b4-c017-1d168e6c6112","sourcePort":"items","targetId":"1c1a077f-f48f-2955-f49f-18b61c36164c","targetPort":"in-ricavi"},{"sourceId":"2208a276-0342-0830-4767-276d7d624175","sourcePort":"items","targetId":"1c1a077f-f48f-2955-f49f-18b61c36164c","targetPort":"in-costi"},{"sourceId":"41a5d4a9-22d9-14b4-c017-1d168e6c6112","sourcePort":"changed","targetId":"1c1a077f-f48f-2955-f49f-18b61c36164c","targetPort":"run"},{"sourceId":"2208a276-0342-0830-4767-276d7d624175","sourcePort":"changed","targetId":"1c1a077f-f48f-2955-f49f-18b61c36164c","targetPort":"run"},{"sourceId":"89adf665-5543-5951-8e3f-d00b7262d6ae","sourcePort":"out-Data","targetId":"e2f36b8c-e8b2-d247-f745-e34fc5a8ea65","targetPort":"data"},{"sourceId":"89adf665-5543-5951-8e3f-d00b7262d6ae","sourcePort":"out-YAxis","targetId":"64546baa-ed48-89c5-358c-f5d5661f423b","targetPort":"scales"},{"sourceId":"89adf665-5543-5951-8e3f-d00b7262d6ae","sourcePort":"out-YAxis","targetId":"e2f36b8c-e8b2-d247-f745-e34fc5a8ea65","targetPort":"scales"},{"sourceId":"7507c0bd-348f-f631-e383-5f46fb85096f","sourcePort":"Run","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"75dacb9e-0d8d-bde3-a2cf-84aed17c55cf","sourcePort":"didMount","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"166dc674-98ff-7289-f16d-2f157d75d642","sourcePort":"onChange","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"166dc674-98ff-7289-f16d-2f157d75d642","sourcePort":"value","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"var_when_ticket"},{"sourceId":"155a0b1a-118c-fc19-6156-6a2106a5811f","sourcePort":"onChange","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"155a0b1a-118c-fc19-6156-6a2106a5811f","sourcePort":"value","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"var_when_area"},{"sourceId":"cb0a6dad-c896-2579-8642-ec97f5286184","sourcePort":"onChange","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"cb0a6dad-c896-2579-8642-ec97f5286184","sourcePort":"value","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"var_when_soggetto"},{"sourceId":"edd613a4-4726-a431-f139-be388bd14d6c","sourcePort":"onChange","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"edd613a4-4726-a431-f139-be388bd14d6c","sourcePort":"value","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"var_when_gestore"},{"sourceId":"82d02be9-aa24-541d-ffa0-fe4d4d822891","sourcePort":"Changed","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"82d02be9-aa24-541d-ffa0-fe4d4d822891","sourcePort":"Value","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"dataDal"},{"sourceId":"5ad5ce2e-e1a0-a65c-9188-e7da8a742553","sourcePort":"Changed","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"5ad5ce2e-e1a0-a65c-9188-e7da8a742553","sourcePort":"Value","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"dataAl"},{"sourceId":"5ca16e98-8433-7214-a592-165a023e7e5a","sourcePort":"totale","targetId":"3ead75bb-84a2-f7ed-13c5-287313bdc0a8","targetPort":"importo"},{"sourceId":"5ca16e98-8433-7214-a592-165a023e7e5a","sourcePort":"data","targetId":"16e7c0fe-1b8c-ef1c-a8d7-cb9f600f33eb","targetPort":"items"},{"sourceId":"5ca16e98-8433-7214-a592-165a023e7e5a","sourcePort":"data","targetId":"41a5d4a9-22d9-14b4-c017-1d168e6c6112","targetPort":"items"},{"sourceId":"7507c0bd-348f-f631-e383-5f46fb85096f","sourcePort":"Run","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"75dacb9e-0d8d-bde3-a2cf-84aed17c55cf","sourcePort":"didMount","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"166dc674-98ff-7289-f16d-2f157d75d642","sourcePort":"onChange","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"166dc674-98ff-7289-f16d-2f157d75d642","sourcePort":"value","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"var_when_ticket"},{"sourceId":"155a0b1a-118c-fc19-6156-6a2106a5811f","sourcePort":"onChange","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"155a0b1a-118c-fc19-6156-6a2106a5811f","sourcePort":"value","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"var_when_area"},{"sourceId":"edd613a4-4726-a431-f139-be388bd14d6c","sourcePort":"onChange","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"edd613a4-4726-a431-f139-be388bd14d6c","sourcePort":"value","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"var_when_soggetto"},{"sourceId":"82d02be9-aa24-541d-ffa0-fe4d4d822891","sourcePort":"Changed","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"82d02be9-aa24-541d-ffa0-fe4d4d822891","sourcePort":"Value","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"dataDal"},{"sourceId":"5ad5ce2e-e1a0-a65c-9188-e7da8a742553","sourcePort":"Changed","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"5ad5ce2e-e1a0-a65c-9188-e7da8a742553","sourcePort":"Value","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"dataAl"},{"sourceId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","sourcePort":"totaleCosti","targetId":"5618c32f-a3e5-db87-cd86-79f9660bf1b5","targetPort":"importo"},{"sourceId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","sourcePort":"dataCosti","targetId":"2208a276-0342-0830-4767-276d7d624175","targetPort":"items"},{"sourceId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","sourcePort":"dataCosti","targetId":"a22cc744-503d-dacc-9e24-3fa985545b60","targetPort":"items"},{"sourceId":"47ea4b0f-4a48-a0a4-96cb-4884378cbdc5","sourcePort":"eventReceived","targetId":"4d023f18-6f54-4c1f-36a6-ad434e8b7878","targetPort":"Run"},{"sourceId":"47ea4b0f-4a48-a0a4-96cb-4884378cbdc5","sourcePort":"eventReceived","targetId":"5ca16e98-8433-7214-a592-165a023e7e5a","targetPort":"Run"},{"sourceId":"8240ac05-5073-a21e-b858-8f3692be602d","sourcePort":"checked","targetId":"89adf665-5543-5951-8e3f-d00b7262d6ae","targetPort":"in-IsGiornaliero"},{"sourceId":"8240ac05-5073-a21e-b858-8f3692be602d","sourcePort":"onChange","targetId":"89adf665-5543-5951-8e3f-d00b7262d6ae","targetPort":"run"}],"ports":[{"name":"Run","type":{"name":"signal","allowConnectionsOnly":true},"group":"Actions","plug":"input","index":1}],"roots":["75dacb9e-0d8d-bde3-a2cf-84aed17c55cf"]},{"name":"/Cards/Card_daIncassare","nodes":[{"id":"db9c155d-63c7-db7d-5445-1924c8ace107","type":"Group","parameters":{"sizeMode":"contentHeight","marginBottom":{"value":16,"unit":"px"},"marginLeft":{"value":16,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"backgroundColor":"#FFFFFF","borderRadius":{"value":4,"unit":"px"},"paddingTop":{"value":0,"unit":"px"},"paddingRight":{"value":0,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"},"paddingLeft":{"value":0,"unit":"px"},"boxShadowEnabled":true,"boxShadowOffsetX":{"value":3,"unit":"px"},"boxShadowOffsetY":{"value":3,"unit":"px"}},"ports":[],"children":[{"id":"ff3cbae0-8e6f-4feb-a3dd-aeb889c3054e","type":"Group","parameters":{"sizeMode":"contentHeight","backgroundColor":"blue","paddingLeft":{"value":5,"unit":"px"},"borderTopLeftRadius":{"value":4,"unit":"px"},"borderTopRightRadius":{"value":4,"unit":"px"}},"ports":[],"children":[{"id":"3c258900-51d6-21af-7492-2b842e3308e7","type":"Text","parameters":{"sizeMode":"contentHeight","width":{"value":100,"unit":"%"},"fontSize":{"value":20,"unit":"px"},"color":"White"},"ports":[],"children":[]}]},{"id":"569a6b97-f65e-e045-f40b-3b011c9a8e8b","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","backgroundColor":"transparent","paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"columnGap":{"value":5,"unit":"px"}},"ports":[],"children":[{"id":"8ea48e81-ed9e-fe6f-ead7-73373789699b","type":"Text","parameters":{"sizeMode":"contentHeight","width":{"value":25,"unit":"%"},"textStyle":"Body Large"},"ports":[],"children":[]},{"id":"6cecd312-73ae-05bc-4a2a-cac3f81821c1","type":"Text","parameters":{"sizeMode":"contentHeight","width":{"value":25,"unit":"%"},"textStyle":"Body Large"},"ports":[],"children":[]},{"id":"058374ec-e993-e251-3769-8c4b3ecefc97","type":"Text","parameters":{"width":{"value":25,"unit":"%"},"fontFamily":"fonts/Roboto/Roboto-LightItalic.ttf"},"ports":[],"children":[]},{"id":"a5d69017-c4c5-dd93-26a7-8eaf5958999d","type":"Text","parameters":{"width":{"value":25,"unit":"%"},"fontFamily":"fonts/Roboto/Roboto-LightItalic.ttf"},"ports":[],"children":[]}]},{"id":"dec66e89-9f9e-c30d-1152-1c2def43129d","type":"Group","parameters":{"flexDirection":"row","paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"}},"ports":[],"children":[{"id":"48de0980-b87c-0ba5-fa92-5a96ab1057da","type":"Text","parameters":{"width":{"value":50,"unit":"%"},"textStyle":"Body Medium","fontFamily":"fonts/Roboto/Roboto-Bold.ttf"},"ports":[],"children":[]},{"id":"ca4ea4b0-f0d2-e7d5-b17a-8331c248ae72","type":"Text","parameters":{"width":{"value":50,"unit":"%"}},"ports":[],"children":[]}]},{"id":"f49912af-0320-4be0-b041-8adbd8b20d42","type":"Group","parameters":{"alignX":"left","alignItems":"flex-end","paddingTop":{"value":5,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"},"paddingRight":{"value":10,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"mounted":true,"flexDirection":"row","columnGap":{"value":16,"unit":"px"}},"ports":[],"children":[{"id":"8be9af51-8e2e-7182-88aa-406bcc8cb15b","type":"net.noodl.controls.button","parameters":{"backgroundColor":"#F75A4F00","color":"Black","label":"STRIPE","borderStyle":"solid","sizeMode":"explicit"},"ports":[],"children":[]},{"id":"4911bcdd-2ae3-002b-1ff6-23c754de2b26","type":"net.noodl.controls.button","parameters":{"backgroundColor":"#F75A4F00","color":"Black","label":"BONIFICO","borderStyle":"solid","sizeMode":"explicit"},"ports":[],"children":[]}]}]},{"id":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"ef869d18-b2ab-e78b-73fb-1305d7a66ca1","type":"Expression","parameters":{"expression":"\"€ \" + importo"},"ports":[],"children":[]},{"id":"d9f685fa-95fa-9cf0-36c7-205ad7b288eb","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    const supid = parseInt(Inputs.Supid);\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('ricavi')\n        //.update({ payment_done: true })\n        .select('id, data, importo, soggetto')\n        .eq('id', supid);\n\n        console.log(\"Cliccato il SALDA per questo ID \" + supid + data.id); // LOG di cosa ho cliccato\n\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        console.log('RecordToUpdate:', data);\n        Outputs.RecordToUpdate = data;\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-Supid","displayName":"Supid","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-RecordToUpdate","displayName":"RecordToUpdate","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"5a6524e2-363f-5950-1405-e1fe6c580579","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    let supid = Inputs.RecordToUpdate[0].id;\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('ricavi')\n        .update({ payment_done: true, portafoglio:1 })\n        //.select('id, data, importo, soggetto')\n        .eq('id', supid);\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        Outputs.ToastMessage = \"Ricavo saldato correttamente\";\n        Outputs.ToastType = \"Success\";\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-RecordToUpdate","displayName":"RecordToUpdate","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-ToastMessage","displayName":"ToastMessage","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-ToastType","displayName":"ToastType","plug":"output","type":"*","group":"Outputs","index":8}],"children":[]},{"id":"18ec3418-3a0a-6265-d185-a3a4e5dbc09f","type":"/Components/Show Toast","parameters":{},"ports":[],"children":[]},{"id":"72a66675-f1b1-e7e9-feeb-8d5e9e43b0fe","type":"Event Sender","parameters":{"channelName":"FetchPayment","propagation":"global"},"ports":[],"children":[]},{"id":"41a8ec3d-dd3f-3748-d8bf-932eea9da6b3","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    const supid = parseInt(Inputs.Supid);\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('ricavi')\n        //.update({ payment_done: true })\n        .select('id, data, importo, soggetto')\n        .eq('id', supid);\n\n        console.log(\"Cliccato il SALDA per questo ID \" + supid + data.id); // LOG di cosa ho cliccato\n\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        console.log('RecordToUpdate:', data);\n        Outputs.RecordToUpdate = data;\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-Supid","displayName":"Supid","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-RecordToUpdate","displayName":"RecordToUpdate","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"b155fc28-5e99-33f6-7e9f-0ea514754ee2","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    let supid = Inputs.RecordToUpdate[0].id;\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('ricavi')\n        .update({ payment_done: true, portafoglio:2 })\n        //.select('id, data, importo, soggetto')\n        .eq('id', supid);\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        Outputs.ToastMessage = \"Ricavo saldato correttamente\";\n        Outputs.ToastType = \"Success\";\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-RecordToUpdate","displayName":"RecordToUpdate","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-ToastMessage","displayName":"ToastMessage","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-ToastType","displayName":"ToastType","plug":"output","type":"*","group":"Outputs","index":8}],"children":[]}],"connections":[{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"date","targetId":"8ea48e81-ed9e-fe6f-ead7-73373789699b","targetPort":"text"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"soggetto","targetId":"3c258900-51d6-21af-7492-2b842e3308e7","targetPort":"text"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"area","targetId":"058374ec-e993-e251-3769-8c4b3ecefc97","targetPort":"text"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"ticket","targetId":"a5d69017-c4c5-dd93-26a7-8eaf5958999d","targetPort":"text"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"gestore","targetId":"48de0980-b87c-0ba5-fa92-5a96ab1057da","targetPort":"text"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"prodotto","targetId":"ca4ea4b0-f0d2-e7d5-b17a-8331c248ae72","targetPort":"text"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"importo","targetId":"ef869d18-b2ab-e78b-73fb-1305d7a66ca1","targetPort":"importo"},{"sourceId":"ef869d18-b2ab-e78b-73fb-1305d7a66ca1","sourcePort":"result","targetId":"6cecd312-73ae-05bc-4a2a-cac3f81821c1","targetPort":"text"},{"sourceId":"d9f685fa-95fa-9cf0-36c7-205ad7b288eb","sourcePort":"out-Success","targetId":"5a6524e2-363f-5950-1405-e1fe6c580579","targetPort":"run"},{"sourceId":"d9f685fa-95fa-9cf0-36c7-205ad7b288eb","sourcePort":"out-RecordToUpdate","targetId":"5a6524e2-363f-5950-1405-e1fe6c580579","targetPort":"in-RecordToUpdate"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"supid","targetId":"d9f685fa-95fa-9cf0-36c7-205ad7b288eb","targetPort":"in-Supid"},{"sourceId":"8be9af51-8e2e-7182-88aa-406bcc8cb15b","sourcePort":"onClick","targetId":"d9f685fa-95fa-9cf0-36c7-205ad7b288eb","targetPort":"run"},{"sourceId":"5a6524e2-363f-5950-1405-e1fe6c580579","sourcePort":"out-Success","targetId":"18ec3418-3a0a-6265-d185-a3a4e5dbc09f","targetPort":"Do"},{"sourceId":"5a6524e2-363f-5950-1405-e1fe6c580579","sourcePort":"out-ToastMessage","targetId":"18ec3418-3a0a-6265-d185-a3a4e5dbc09f","targetPort":"Message"},{"sourceId":"5a6524e2-363f-5950-1405-e1fe6c580579","sourcePort":"out-ToastType","targetId":"18ec3418-3a0a-6265-d185-a3a4e5dbc09f","targetPort":"Type"},{"sourceId":"5a6524e2-363f-5950-1405-e1fe6c580579","sourcePort":"out-Success","targetId":"72a66675-f1b1-e7e9-feeb-8d5e9e43b0fe","targetPort":"sendEvent"},{"sourceId":"4911bcdd-2ae3-002b-1ff6-23c754de2b26","sourcePort":"onClick","targetId":"41a8ec3d-dd3f-3748-d8bf-932eea9da6b3","targetPort":"run"},{"sourceId":"633b30ac-fb9b-9d09-c9d2-0ee655d30f62","sourcePort":"supid","targetId":"41a8ec3d-dd3f-3748-d8bf-932eea9da6b3","targetPort":"in-Supid"},{"sourceId":"41a8ec3d-dd3f-3748-d8bf-932eea9da6b3","sourcePort":"out-Success","targetId":"b155fc28-5e99-33f6-7e9f-0ea514754ee2","targetPort":"run"},{"sourceId":"41a8ec3d-dd3f-3748-d8bf-932eea9da6b3","sourcePort":"out-RecordToUpdate","targetId":"b155fc28-5e99-33f6-7e9f-0ea514754ee2","targetPort":"in-RecordToUpdate"},{"sourceId":"b155fc28-5e99-33f6-7e9f-0ea514754ee2","sourcePort":"out-Success","targetId":"18ec3418-3a0a-6265-d185-a3a4e5dbc09f","targetPort":"Do"},{"sourceId":"b155fc28-5e99-33f6-7e9f-0ea514754ee2","sourcePort":"out-ToastMessage","targetId":"18ec3418-3a0a-6265-d185-a3a4e5dbc09f","targetPort":"Message"},{"sourceId":"b155fc28-5e99-33f6-7e9f-0ea514754ee2","sourcePort":"out-ToastType","targetId":"18ec3418-3a0a-6265-d185-a3a4e5dbc09f","targetPort":"Type"},{"sourceId":"b155fc28-5e99-33f6-7e9f-0ea514754ee2","sourcePort":"out-Success","targetId":"72a66675-f1b1-e7e9-feeb-8d5e9e43b0fe","targetPort":"sendEvent"}],"ports":[{"name":"date","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":1},{"name":"importo","type":{"name":"*","editAsType":"string"},"group":"Parameters","plug":"input","index":2},{"name":"soggetto","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":3},{"name":"area","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":4},{"name":"ticket","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":5},{"name":"gestore","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":6},{"name":"prodotto","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":7},{"name":"ticketvalue","type":"*","plug":"input","index":9},{"name":"supid","type":{"name":"*"},"group":"Inputs","plug":"input","index":10}],"roots":["db9c155d-63c7-db7d-5445-1924c8ace107"]},{"name":"/Cards/Card_daPagare","nodes":[{"id":"7596cbcb-c9fb-1eeb-1503-a6bf9f739747","type":"Group","parameters":{"sizeMode":"contentHeight","marginBottom":{"value":16,"unit":"px"},"marginLeft":{"value":16,"unit":"px"},"marginRight":{"value":16,"unit":"px"},"backgroundColor":"#FFFFFF","borderRadius":{"value":4,"unit":"px"},"paddingTop":{"value":0,"unit":"px"},"paddingRight":{"value":0,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"},"paddingLeft":{"value":0,"unit":"px"},"boxShadowEnabled":true,"boxShadowOffsetX":{"value":3,"unit":"px"},"boxShadowOffsetY":{"value":3,"unit":"px"}},"ports":[],"children":[{"id":"d0609f20-a46f-d8c4-94f9-833348f6db61","type":"Group","parameters":{"sizeMode":"contentHeight","backgroundColor":"red","paddingLeft":{"value":5,"unit":"px"},"borderTopLeftRadius":{"value":4,"unit":"px"},"borderTopRightRadius":{"value":4,"unit":"px"},"paddingTop":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":0,"unit":"px"}},"ports":[],"children":[{"id":"4f928d24-caba-324f-aad5-0fa745a21e88","type":"Text","parameters":{"sizeMode":"contentHeight","width":{"value":100,"unit":"%"},"color":"White","fontSize":{"value":20,"unit":"px"}},"ports":[],"children":[]}]},{"id":"9bbb6592-48f5-2d21-30e4-0891115d6287","type":"Group","parameters":{"flexDirection":"row","sizeMode":"contentHeight","backgroundColor":"transparent","paddingLeft":{"value":5,"unit":"px"},"paddingTop":{"value":5,"unit":"px"},"paddingRight":{"value":5,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"columnGap":{"value":5,"unit":"px"}},"ports":[],"children":[{"id":"f14c1985-b983-1850-6e8b-064d61a23ca6","type":"Text","parameters":{"sizeMode":"contentHeight","width":{"value":25,"unit":"%"},"textStyle":"Body Large","textAlignX":"left","textAlignY":"center"},"ports":[],"children":[]},{"id":"902337e3-1a1a-434e-59c1-1e6878b772ab","type":"Text","parameters":{"sizeMode":"contentHeight","width":{"value":25,"unit":"%"},"textAlignY":"center","textStyle":"Body Large"},"ports":[],"children":[]},{"id":"46f918a1-eefa-e0d3-6974-af0b135b3ee3","type":"Text","parameters":{"width":{"value":25,"unit":"%"},"textAlignY":"center","textStyle":"Body Medium","fontFamily":"fonts/Roboto/Roboto-LightItalic.ttf"},"ports":[],"children":[]},{"id":"c9bf9070-f11f-b5b4-953c-75da5bb9eaee","type":"Text","parameters":{"width":{"value":25,"unit":"%"},"textAlignY":"center","fontFamily":"fonts/Roboto/Roboto-LightItalic.ttf"},"ports":[],"children":[]}]},{"id":"1265bcc5-5bc5-70c9-558d-6b7af1b7fcd4","type":"Group","parameters":{"alignX":"left","alignItems":"flex-end","paddingTop":{"value":5,"unit":"px"},"paddingLeft":{"value":10,"unit":"px"},"paddingRight":{"value":10,"unit":"px"},"paddingBottom":{"value":5,"unit":"px"},"flexDirection":"row","columnGap":{"value":16,"unit":"px"}},"ports":[],"children":[{"id":"7bc907a1-f29a-8744-1ece-0c46d2b7513e","type":"net.noodl.controls.button","parameters":{"backgroundColor":"#F75A4F00","color":"Black","label":"STRIPE","borderStyle":"solid","sizeMode":"explicit"},"ports":[],"children":[]},{"id":"4026aa93-ce2e-8617-7c26-4b4a58e1353a","type":"net.noodl.controls.button","parameters":{"backgroundColor":"#F75A4F00","color":"Black","label":"BONIFICO","borderStyle":"solid","sizeMode":"explicit"},"ports":[],"children":[]}]}]},{"id":"567ef58f-00c7-7a8f-2932-25187ae4f50e","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"2f992463-b0c8-fbb6-69c1-5f7939d2f2ac","type":"Expression","parameters":{"expression":"\"€ \" + importo"},"ports":[],"children":[]},{"id":"b1740c13-186b-a579-714b-615b18f1fd1d","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    const supid = parseInt(Inputs.Supid);\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('costi')\n        //.update({ payment_done: true })\n        .select('id, data, importo, soggetto')\n        .eq('id', supid);\n\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        Outputs.RecordToUpdate = data;\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-Supid","displayName":"Supid","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-RecordToUpdate","displayName":"RecordToUpdate","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"3746aba4-7a69-acc0-7273-410bd6a8dbf0","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    let supid = Inputs.RecordToUpdate[0].id;\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('costi')\n        .update({ payment_done: true, pagamento:1 })\n        //.select('id, data, importo, soggetto')\n        .eq('id', supid);\n\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n        Outputs.ToastMessage = \"Errore, riprovare\";\n        Outputs.ToastType = \"Warning\";\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        Outputs.ToastMessage = \"Costo saldato correttamente\";\n        Outputs.ToastType = \"Success\";\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-RecordToUpdate","displayName":"RecordToUpdate","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-ToastMessage","displayName":"ToastMessage","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-ToastType","displayName":"ToastType","plug":"output","type":"*","group":"Outputs","index":8}],"children":[]},{"id":"71a4cc0b-f83f-73f1-d5e0-0bdb46ed3b96","type":"/Components/Show Toast","parameters":{},"ports":[],"children":[]},{"id":"33550555-4e44-b822-acb2-dd63afad97bb","type":"Event Sender","parameters":{"channelName":"FetchPayment","propagation":"global"},"ports":[],"children":[]},{"id":"b8bbdfb8-45a1-2897-7cb5-12bba9e5a87d","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    const supid = parseInt(Inputs.Supid);\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('costi')\n        //.update({ payment_done: true })\n        .select('id, data, importo, soggetto')\n        .eq('id', supid);\n\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        Outputs.RecordToUpdate = data;\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-Supid","displayName":"Supid","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-RecordToUpdate","displayName":"RecordToUpdate","plug":"output","type":"*","group":"Outputs","index":7}],"children":[]},{"id":"8d825759-0bb5-8fb6-b41f-5d73435c0f85","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\ntry {\n    let supid = Inputs.RecordToUpdate[0].id;\n    // Esecuzione della query di aggiornamento\n    const { data, error } = await supabase\n        .from('costi')\n        .update({ payment_done: true, pagamento:2 })\n        //.select('id, data, importo, soggetto')\n        .eq('id', supid);\n\n    // Gestione della risposta\n    if (error) {\n        console.error('Update error:', error);\n        Outputs.Failure();  // Funzione da chiamare in caso di fallimento\n        Outputs.ToastMessage = \"Errore, riprovare\";\n        Outputs.ToastType = \"Warning\";\n    } else {\n        Outputs.Success();  // Funzione da chiamare in caso di successo\n        Outputs.ToastMessage = \"Costo saldato correttamente\";\n        Outputs.ToastType = \"Success\";\n    }\n} catch (error) {\n    console.error('Execution error:', error);\n    Outputs.Failure();  // Funzione da chiamare in caso di errori non gestiti\n}"},"ports":[{"name":"in-RecordToUpdate","displayName":"RecordToUpdate","plug":"input","type":"*","group":"Inputs","index":4},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-ToastMessage","displayName":"ToastMessage","plug":"output","type":"*","group":"Outputs","index":7},{"name":"out-ToastType","displayName":"ToastType","plug":"output","type":"*","group":"Outputs","index":8}],"children":[]}],"connections":[{"sourceId":"567ef58f-00c7-7a8f-2932-25187ae4f50e","sourcePort":"date","targetId":"f14c1985-b983-1850-6e8b-064d61a23ca6","targetPort":"text"},{"sourceId":"567ef58f-00c7-7a8f-2932-25187ae4f50e","sourcePort":"soggetto_ragsoc","targetId":"4f928d24-caba-324f-aad5-0fa745a21e88","targetPort":"text"},{"sourceId":"567ef58f-00c7-7a8f-2932-25187ae4f50e","sourcePort":"an_area_nome","targetId":"46f918a1-eefa-e0d3-6974-af0b135b3ee3","targetPort":"text"},{"sourceId":"567ef58f-00c7-7a8f-2932-25187ae4f50e","sourcePort":"an_tecnologia_nome","targetId":"c9bf9070-f11f-b5b4-953c-75da5bb9eaee","targetPort":"text"},{"sourceId":"567ef58f-00c7-7a8f-2932-25187ae4f50e","sourcePort":"importo","targetId":"2f992463-b0c8-fbb6-69c1-5f7939d2f2ac","targetPort":"importo"},{"sourceId":"2f992463-b0c8-fbb6-69c1-5f7939d2f2ac","sourcePort":"result","targetId":"902337e3-1a1a-434e-59c1-1e6878b772ab","targetPort":"text"},{"sourceId":"567ef58f-00c7-7a8f-2932-25187ae4f50e","sourcePort":"supid","targetId":"b1740c13-186b-a579-714b-615b18f1fd1d","targetPort":"in-Supid"},{"sourceId":"7bc907a1-f29a-8744-1ece-0c46d2b7513e","sourcePort":"onClick","targetId":"b1740c13-186b-a579-714b-615b18f1fd1d","targetPort":"run"},{"sourceId":"b1740c13-186b-a579-714b-615b18f1fd1d","sourcePort":"out-Success","targetId":"3746aba4-7a69-acc0-7273-410bd6a8dbf0","targetPort":"run"},{"sourceId":"b1740c13-186b-a579-714b-615b18f1fd1d","sourcePort":"out-RecordToUpdate","targetId":"3746aba4-7a69-acc0-7273-410bd6a8dbf0","targetPort":"in-RecordToUpdate"},{"sourceId":"3746aba4-7a69-acc0-7273-410bd6a8dbf0","sourcePort":"out-Success","targetId":"71a4cc0b-f83f-73f1-d5e0-0bdb46ed3b96","targetPort":"Do"},{"sourceId":"3746aba4-7a69-acc0-7273-410bd6a8dbf0","sourcePort":"out-ToastMessage","targetId":"71a4cc0b-f83f-73f1-d5e0-0bdb46ed3b96","targetPort":"Message"},{"sourceId":"3746aba4-7a69-acc0-7273-410bd6a8dbf0","sourcePort":"out-ToastType","targetId":"71a4cc0b-f83f-73f1-d5e0-0bdb46ed3b96","targetPort":"Type"},{"sourceId":"3746aba4-7a69-acc0-7273-410bd6a8dbf0","sourcePort":"out-Success","targetId":"33550555-4e44-b822-acb2-dd63afad97bb","targetPort":"sendEvent"},{"sourceId":"4026aa93-ce2e-8617-7c26-4b4a58e1353a","sourcePort":"onClick","targetId":"b8bbdfb8-45a1-2897-7cb5-12bba9e5a87d","targetPort":"run"},{"sourceId":"567ef58f-00c7-7a8f-2932-25187ae4f50e","sourcePort":"supid","targetId":"b8bbdfb8-45a1-2897-7cb5-12bba9e5a87d","targetPort":"in-Supid"},{"sourceId":"b8bbdfb8-45a1-2897-7cb5-12bba9e5a87d","sourcePort":"out-Success","targetId":"8d825759-0bb5-8fb6-b41f-5d73435c0f85","targetPort":"run"},{"sourceId":"b8bbdfb8-45a1-2897-7cb5-12bba9e5a87d","sourcePort":"out-RecordToUpdate","targetId":"8d825759-0bb5-8fb6-b41f-5d73435c0f85","targetPort":"in-RecordToUpdate"},{"sourceId":"8d825759-0bb5-8fb6-b41f-5d73435c0f85","sourcePort":"out-Success","targetId":"71a4cc0b-f83f-73f1-d5e0-0bdb46ed3b96","targetPort":"Do"},{"sourceId":"8d825759-0bb5-8fb6-b41f-5d73435c0f85","sourcePort":"out-ToastMessage","targetId":"71a4cc0b-f83f-73f1-d5e0-0bdb46ed3b96","targetPort":"Message"},{"sourceId":"8d825759-0bb5-8fb6-b41f-5d73435c0f85","sourcePort":"out-ToastType","targetId":"71a4cc0b-f83f-73f1-d5e0-0bdb46ed3b96","targetPort":"Type"},{"sourceId":"8d825759-0bb5-8fb6-b41f-5d73435c0f85","sourcePort":"out-Success","targetId":"33550555-4e44-b822-acb2-dd63afad97bb","targetPort":"sendEvent"}],"ports":[{"name":"date","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":0},{"name":"importo","type":{"name":"*","editAsType":"string"},"group":"Parameters","plug":"input","index":2},{"name":"soggetto_ragsoc","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":3},{"name":"an_area_nome","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":4},{"name":"an_tecnologia_nome","type":{"name":"string","multiline":true},"default":"Text","group":"Text","plug":"input","index":5},{"name":"supid","type":{"name":"*"},"group":"Inputs","plug":"input","index":6}],"roots":["7596cbcb-c9fb-1eeb-1503-a6bf9f739747"]},{"name":"/Query/Select/Select_costi_noPayment","nodes":[{"id":"1b73f262-50ca-f276-f4dc-97ccf8602f23","type":"JavaScriptFunction","parameters":{"functionScript":"const supabase = Noodl.Variables.supabase;\n\nif (!supabase) throw new Error('Supabase client not found');\n\n  try {\n    // Definizione delle variabili per i filtri e l'ordinamento\n    const var_when_soggetto = Inputs.Var_when_soggetto; // Sostituisci con il valore desiderato o lascia vuoto\n    const var_when_area = Inputs.Var_when_area; // Sostituisci con il valore desiderato o lascia vuoto\n    const var_when_ticket = Inputs.Var_when_ticket; // Sostituisci con il valore desiderato o lascia vuoto\n    const var_orderby_column = Inputs.Var_orderby_column; // Sostituisci con il nome della colonna per l'ordinamento o lascia vuoto\n    const var_orderby_desc_asc = Inputs.Var_orderby_desc_asc; // Usa 'asc' per ascendente, 'desc' per discendente, o lascia vuoto\n    const dataDal = Inputs.DataDal;\n    const dataAl = Inputs.DataAl;\n    // Inizia a costruire la query\n    let query = supabase.from('v_costi_detail')\n    .select('supid:id, date, importo, an_area, an_area_nome, an_tecnologia, an_tecnologia_nome, soggetto, soggetto_ragsoc, descrizione');\n    // Applica la clausola where condizionalmente\n        let matchConditions = { payment_done: false }; // Filtro per visualizzare solo l'incassato\n        if (var_when_area) matchConditions.an_area = var_when_area;\n        if (var_when_ticket) matchConditions.an_tecnologia = var_when_ticket;\n        if (var_when_soggetto) matchConditions.soggetto = var_when_soggetto;\n        query = query.match(matchConditions);\n      // Applica la clausola order by condizionalmente\n      if (var_orderby_column && var_orderby_desc_asc) {\n        query = query.order(var_orderby_column, { ascending: var_orderby_desc_asc === 'asc' });\n      }\n\n      // Applica un order by per il mese estratto dalla colonna 'date'\n      query = query.order('date', { ascending: true });\n\n      //Applica i filtri date Dal Al condizionalmente\n      if (dataDal) {\n            // Filtra gli eventi a partire da questa data (inclusa)\n            query = query.gte('date', dataDal);\n        }\n      if (dataAl) {\n            // Filtra gli eventi fino a questa data (inclusa)\n            query = query.lte('date', dataAl);\n      }\n    // Esegue la query\n    const { data, error } = await query;\n\n  // Ricorda di gestire sia `data` che `error`\n\n    if (error) {\n      console.error(error)\n      Outputs.Failure();\n      console.log(\"errore\");\n    } else if (data) {\n      Outputs.DataCosti = data;\n      Outputs.TotaliCosti = data.reduce((acc, curr) => acc + curr.importo, 0);\n      Outputs.Success();\n    }\n    else {\n      console.log(\"non eseguita\");\n    }\n} catch (error) {\n    console.error(\"errore :\" + error)\n  Outputs.Failure();\n}\n","scriptOutputs":[],"outtype-Success":"signal"},"ports":[{"name":"in-Var_when_soggetto","displayName":"Var_when_soggetto","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-Var_when_area","displayName":"Var_when_area","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-Var_when_ticket","displayName":"Var_when_ticket","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-Var_orderby_column","displayName":"Var_orderby_column","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-Var_orderby_desc_asc","displayName":"Var_orderby_desc_asc","plug":"input","type":"*","group":"Inputs","index":8},{"name":"in-DataDal","displayName":"DataDal","plug":"input","type":"*","group":"Inputs","index":9},{"name":"in-DataAl","displayName":"DataAl","plug":"input","type":"*","group":"Inputs","index":10},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":11},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":12},{"name":"out-DataCosti","displayName":"DataCosti","plug":"output","type":"*","group":"Outputs","index":13},{"name":"out-TotaliCosti","displayName":"TotaliCosti","plug":"output","type":"*","group":"Outputs","index":14}],"children":[]},{"id":"def0a8e4-cc23-acb1-995f-e99c86f5f753","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"cd0ac5b0-ee8c-fef3-a91b-52ace8168ae7","type":"Component Outputs","parameters":{},"ports":[],"children":[]},{"id":"28b6ad33-c58d-7a6a-5dbd-2f6e91f2acda","type":"Date To String","parameters":{},"ports":[],"children":[]},{"id":"d033d5d8-be32-a8dd-bf1b-abaae28e8100","type":"Date To String","parameters":{},"ports":[],"children":[]}],"connections":[{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"Run","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"run"},{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"var_when_soggetto","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"in-Var_when_soggetto"},{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"var_when_area","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"in-Var_when_area"},{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"var_when_ticket","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"in-Var_when_ticket"},{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"var_orderby_column","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"in-Var_orderby_column"},{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"var_orderby_desc_asc","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"in-Var_orderby_desc_asc"},{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"dataDal","targetId":"28b6ad33-c58d-7a6a-5dbd-2f6e91f2acda","targetPort":"input"},{"sourceId":"def0a8e4-cc23-acb1-995f-e99c86f5f753","sourcePort":"dataAl","targetId":"d033d5d8-be32-a8dd-bf1b-abaae28e8100","targetPort":"input"},{"sourceId":"28b6ad33-c58d-7a6a-5dbd-2f6e91f2acda","sourcePort":"currentValue","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"in-DataDal"},{"sourceId":"d033d5d8-be32-a8dd-bf1b-abaae28e8100","sourcePort":"currentValue","targetId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","targetPort":"in-DataAl"},{"sourceId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","sourcePort":"out-TotaliCosti","targetId":"cd0ac5b0-ee8c-fef3-a91b-52ace8168ae7","targetPort":"totaleCosti"},{"sourceId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","sourcePort":"out-Success","targetId":"cd0ac5b0-ee8c-fef3-a91b-52ace8168ae7","targetPort":"Success"},{"sourceId":"1b73f262-50ca-f276-f4dc-97ccf8602f23","sourcePort":"out-DataCosti","targetId":"cd0ac5b0-ee8c-fef3-a91b-52ace8168ae7","targetPort":"dataCosti"}],"ports":[{"name":"dataCosti","type":"*","plug":"output","index":1},{"name":"Run","type":{"name":"signal","allowConnectionsOnly":true},"group":"Actions","plug":"input","index":1},{"name":"Success","type":"signal","plug":"output","index":2},{"name":"var_when_soggetto","type":"*","group":"Inputs","plug":"input","index":2},{"name":"totaleCosti","type":"*","plug":"output","index":3},{"name":"var_when_area","type":"*","group":"Inputs","plug":"input","index":3},{"name":"costiArrayID","type":"*","plug":"output","index":4},{"name":"var_when_ticket","type":"*","group":"Inputs","plug":"input","index":4},{"name":"var_orderby_column","type":"*","group":"Inputs","plug":"input","index":5},{"name":"var_orderby_desc_asc","type":"*","group":"Inputs","plug":"input","index":6},{"name":"dataDal","type":{"name":"date"},"plug":"input","index":7},{"name":"dataAl","type":{"name":"date"},"plug":"input","index":8}],"roots":[]}]